0 info it worked if it ends with ok
1 verbose cli [ '/usr/local/bin/node',
1 verbose cli   '/usr/local/bin/npm',
1 verbose cli   'publish',
1 verbose cli   './',
1 verbose cli   '--tag',
1 verbose cli   'alpha1' ]
2 info using npm@2.14.2
3 info using node@v4.0.0
4 verbose publish [ './' ]
5 silly cache add args [ './', null ]
6 verbose cache add spec ./
7 silly cache add parsed spec Result {
7 silly cache add   raw: './',
7 silly cache add   scope: null,
7 silly cache add   name: null,
7 silly cache add   rawSpec: './',
7 silly cache add   spec: '/Users/vojtatranta/react/redux-simple-crud',
7 silly cache add   type: 'directory' }
8 verbose addLocalDirectory /Users/vojtatranta/.npm/simple-redux-crud/0.0.1/package.tgz not in flight; packing
9 verbose tar pack [ '/Users/vojtatranta/.npm/simple-redux-crud/0.0.1/package.tgz',
9 verbose tar pack   '/Users/vojtatranta/react/redux-simple-crud' ]
10 verbose tarball /Users/vojtatranta/.npm/simple-redux-crud/0.0.1/package.tgz
11 verbose folder /Users/vojtatranta/react/redux-simple-crud
12 info prepublish simple-redux-crud@0.0.1
13 verbose addLocalTarball adding from inside cache /Users/vojtatranta/.npm/simple-redux-crud/0.0.1/package.tgz
14 silly cache afterAdd simple-redux-crud@0.0.1
15 verbose afterAdd /Users/vojtatranta/.npm/simple-redux-crud/0.0.1/package/package.json not in flight; writing
16 verbose afterAdd /Users/vojtatranta/.npm/simple-redux-crud/0.0.1/package/package.json written
17 silly publish { name: 'simple-redux-crud',
17 silly publish   version: '0.0.1',
17 silly publish   description: 'Simple Redux CRUD for your app',
17 silly publish   main: './lib/index.js',
17 silly publish   repository:
17 silly publish    { type: 'git',
17 silly publish      url: 'git+https://github.com/vojtatranta/simple-redux-crud.git' },
17 silly publish   directories: { test: 'test' },
17 silly publish   scripts: { test: 'npm test' },
17 silly publish   keywords: [ 'redux', 'react', 'crud' ],
17 silly publish   dependencies: { redux: '^1.0.1' },
17 silly publish   author: { name: 'vojta.tranta@gmail.com' },
17 silly publish   license: 'ISC',
17 silly publish   readme: '# Simple Redux CRUD\nSimple CRUD for your Redux app\n\n## Motivation\nI found some CRUD implementation of CRUD for redux, but they were a little bit complicated for my purpose.\nSo I created this simple thing, hope you will like it.\n\n## Installation\n```js\n$ npm install react-simple-redux\n```\nAnd you have to have **thunk middleware** enabled in your app!!\n\n## Usage\n```js\n//assuming that you have \'todos\' key in your state (in the root, not somewhere nested). \n//You may use this library only on keys that contain an array!\nlet state = {\n\ttodos: [{\n\t\t\ttext: \'My todo\',\n\t\t\tcompleted: false,\n\t\t\tid: 99\n\t\t}, {\n\t\t\ttext: \'Next todo\',\n\t\t\tcompleted: true,\n\t\t\tid: 100\n\t\t}],\n\tisFetching: false\n\t//whatever else\n}\n\n//in your ./actions/todos/index.js\n//import crud and create action creaters and CRUD reducer\nimport { createCRUDActions } from \'simple-redux-crud\' //this function create action creators for your state key (e.g. todos)\nimport * as actions from \'./yourActions.js\' //you will probably have your own action creators\n\nexport default Object.assign({}, createCRUDActions(\'todos\'), actions) //combine newly created crud actions with your own actions\n//you now get add, edit and delete action creators next to your own actions\n\n```\n### Action creators signatures\n```js\n/**\n\t@param {*} entity - thing you want to add to the state\n\t@param {boolean=} optimistic - whether adding should be done without waiting for some async function e.g. API call\n\t@param {boolean=} optimisticOnly - if you just want to add entity to state without calling API\n*/\nadd(entity, optimistic = true, optimisticOnly = false) \n\n/**\n\t@param {number} index - index for simple editing (important!!)\n\t@param {number} id - id of object for API calls\n\t@param {Object} toUpdate - object of keys you want to update\n\t@param {boolean=} optimistic\n\t@param {boolean=} optimisticOnly\n*/\nedit(index, id, toUpdate, optimistic = true, optimisticOnly = false)\n\n/**\n\t@param {number} index\n\t@param {number} id\n\t@param {Object=} deletePayload - anything you want to send in API request\n\t@param {boolean=} optimistic\n\t@param {boolean=} optimisticOnly\n*/\ndelete(index, id, deletePayload = {}, optimistic = true, optimisticOnly = false)\n```\n\n### Creating CRUD reducer\n```js\nimport { combineReducers } from \'redux\'\nimport { createCRUDReducer } from \'simple-redux-crud\'\n\nexport default combineReducers({\n\ttodos: createCRUDReducer(\'todos\') //argument is of course state key that is meant to be observed by reducer\n})\n\n//that\'s it, everything should be running now\n```\n\n### Calling action creators\n```js\nimport React, { Component } from \'react\'\nimport { connect } from \'redux\'\nimport * as actions from \'../actions/todos\'\n\nclass Todo extends Component {\n\t\n\ttoggleCompleted() {\n\t\t//you don\'t have to send whole entity, it is taken from previous state\n\t\t//don\'t forget to put right index of entity in state as first argument!!\n\t\tthis.props.edit(this.props.index, this.props.id, {completed: !this.props.completed})\n\t},\n\n\trender() {\n\t\t<div className="todo">\n\t\t\t<strong>{this.props.text}</strong>\n\t\t\t<span>{this.completed ? \'Completed\' : \'x\'}</span>\n\t\t\t<span onClick={this.toggleCompleted}>Toggle completed!</span>\n\t\t</div>\t\t\t\t\n\t}\n}\n\nexport default connect((state) => {}, actions)(Todo) //that is it, everything should be running just fine now...\n```\n\n### Configuration\nSo how do you implement API calls?\nRemember calling ```createCRUDActions()```?\nYou can add second argument to this function called ```conf``` look at source code:\n```js\nexport default function(stateKey, conf = {}) {\n\tconst { asyncAdd, asyncEdit, asyncDelete } = conf\n```\nGot it?\nSo you can just do this in your /actions/todos/index.js:\n```js\n//...\n\nexport default Object.assign({}, createCRUDActions(\'todos\', {\n\tasyncAdd: function(entity, optimistic) {\n\t\treturn (dispatch, getState) => { //that is why you have to use thunk middleware!!\n\t\t\t//some stuff\n\t\t}\n\t},\n\tasyncEdit: function(index, id, toUpdate, optimistic) {\n\t\t//same thing here\n\t},\n\tasyncDelete: function(index, id, deletePayload, optimistic) {\n\t\t//same here too\n\t}\n}), actions)\n```\n## My first NPM package\nI would:\n* add tests :))\n* get some users\n* solve some of their issues\nThanks. VT.\n\n',
17 silly publish   readmeFilename: 'README.md',
17 silly publish   gitHead: '0f1055797c3c898b21a3de8ccbef32b31b3da0be',
17 silly publish   bugs: { url: 'https://github.com/vojtatranta/simple-redux-crud/issues' },
17 silly publish   homepage: 'https://github.com/vojtatranta/simple-redux-crud#readme',
17 silly publish   _id: 'simple-redux-crud@0.0.1',
17 silly publish   _shasum: '6ce1dbf719481edc0b6c96be0362445177cc663b',
17 silly publish   _from: '.' }
18 verbose getPublishConfig undefined
19 silly mapToRegistry name simple-redux-crud
20 silly mapToRegistry using default registry
21 silly mapToRegistry registry https://registry.npmjs.org/
22 silly mapToRegistry uri https://registry.npmjs.org/simple-redux-crud
23 verbose publish registryBase https://registry.npmjs.org/
24 silly publish uploading /Users/vojtatranta/.npm/simple-redux-crud/0.0.1/package.tgz
25 verbose request uri https://registry.npmjs.org/simple-redux-crud
26 verbose request sending authorization for write operation
27 info attempt registry request try #1 at 11:59:48 PM
28 verbose request using bearer token for auth
29 verbose request id 54e3e54f386b69d3
30 http request PUT https://registry.npmjs.org/simple-redux-crud
31 http 403 https://registry.npmjs.org/simple-redux-crud
32 verbose headers { 'content-type': 'application/json',
32 verbose headers   'cache-control': 'max-age=60',
32 verbose headers   'content-length': '95',
32 verbose headers   'accept-ranges': 'bytes',
32 verbose headers   date: 'Sun, 27 Sep 2015 21:59:49 GMT',
32 verbose headers   via: '1.1 varnish',
32 verbose headers   connection: 'keep-alive',
32 verbose headers   'x-served-by': 'cache-lcy1128-LCY',
32 verbose headers   'x-cache': 'MISS',
32 verbose headers   'x-cache-hits': '0',
32 verbose headers   'x-timer': 'S1443391188.584527,VS0,VE1086' }
33 verbose request invalidating /Users/vojtatranta/.npm/registry.npmjs.org/simple-redux-crud on PUT
34 error publish Failed PUT 403
35 verbose stack Error: "You cannot publish over the previously published version 0.0.1." : simple-redux-crud
35 verbose stack     at makeError (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:263:12)
35 verbose stack     at CachingRegistryClient.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:251:14)
35 verbose stack     at Request._callback (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:171:14)
35 verbose stack     at Request.self.callback (/usr/local/lib/node_modules/npm/node_modules/request/request.js:198:22)
35 verbose stack     at emitTwo (events.js:87:13)
35 verbose stack     at Request.emit (events.js:172:7)
35 verbose stack     at Request.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:1073:14)
35 verbose stack     at emitOne (events.js:82:20)
35 verbose stack     at Request.emit (events.js:169:7)
35 verbose stack     at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:1019:12)
36 verbose statusCode 403
37 verbose pkgid simple-redux-crud
38 verbose cwd /Users/vojtatranta/react/redux-simple-crud
39 error Darwin 14.0.0
40 error argv "/usr/local/bin/node" "/usr/local/bin/npm" "publish" "./" "--tag" "alpha1"
41 error node v4.0.0
42 error npm  v2.14.2
43 error code E403
44 error "You cannot publish over the previously published version 0.0.1." : simple-redux-crud
45 error If you need help, you may report this error at:
45 error     <https://github.com/npm/npm/issues>
46 verbose exit [ 1, true ]
